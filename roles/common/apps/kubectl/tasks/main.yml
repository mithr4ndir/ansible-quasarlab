- name: Set short version for URL
  set_fact:
    kubectl_short_version: "{{ kubectl_version.split('.')[0] }}.{{ kubectl_version.split('.')[1] }}"

- name: Ensure /etc/apt/keyrings exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes APT signing key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v{{ kubectl_short_version }}/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    mode: '0644'

- name: Check if key is ASCII-armored
  ansible.builtin.shell: grep -q "BEGIN PGP PUBLIC KEY BLOCK" /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: key_format_check
  failed_when: false
  changed_when: false

- name: Convert to binary if ASCII-armored
  ansible.builtin.shell: |
    gpg --dearmor < /etc/apt/keyrings/kubernetes-apt-keyring.gpg > /etc/apt/keyrings/kubernetes-apt-keyring.gpg.tmp
    mv /etc/apt/keyrings/kubernetes-apt-keyring.gpg.tmp /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  when: key_format_check.rc == 0
  become: true

- name: Add the Kubernetes APT repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg]
      https://pkgs.k8s.io/core:/stable:/v{{ kubectl_short_version }}/deb/ /
    filename: kubernetes
    state: present
    update_cache: yes
  register: repo_added

- name: Install kubectl
  ansible.builtin.apt:
    name:
      - "kubectl={{ kube_version }}"
    state: present
    update_cache: no
  become: true

- name: Check if packages are already held
  ansible.builtin.command: apt-mark showhold
  register: held_pkgs
  changed_when: false

- name: Hold Kubernetes packages (if not already held)
  ansible.builtin.shell: apt-mark hold kubelet kubeadm kubectl
  when: >
    ('kubectl' not in held_pkgs.stdout)
  become: true